global:
  ## Override the deployment namespace
  namespaceOverride: logging

image:
  repository: amazon/aws-for-fluent-bit
  tag: 2.1.0
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  parsersFiles:
    - /fluent-bit/parsers/parsers.conf
  # extraParsers: |
  #   [PARSER]
  #       Name   logfmt
  #       Format logfmt

input:
  tag: "kube.*"
  path: "/var/log/containers/*.log"
  db: "/var/log/flb_kube.db"
  parser: docker
  dockerMode: "On"
  memBufLimit: 5MB
  skipLongLines: "On"
  refreshInterval: 10

# extraInputs: |
#   [INPUT]
#       Name         winlog
#       Channels     Setup,Windows PowerShell
#       Interval_Sec 1
#       DB           winlog.sqlite


filter:
  match: "kube.*"
  kubeURL: "https://kubernetes.default.svc.cluster.local:443"
  mergeLog: "On"
  mergeLogKey: "data"
  keepLog: "On"
  k8sLoggingParser: "On"
  k8sLoggingExclude: "On"

# extraFilters: |
#   [FILTER]
#       Name   grep
#       Match  *
#       Exclude log lvl=debug*

cloudWatch:
  enabled: true
  match: "*"
  region: ${region}
  logGroupName: ${aws_for_fluent_bit_cw_log_group}
  logStreamName:
  logStreamPrefix: "fluentbit-"
  logKey:
  logFormat:
  roleArn:
  autoCreateGroup: true
  endpoint:
  credentialsEndpoint:  {}

firehose:
  enabled: false
  match: "*"
  region: ${region}
  deliveryStream: "my-stream"
  dataKeys:
  roleArn:
  endpoint:
  timeKey:

kinesis:
  enabled: false
  match: "*"
  region: ${region}
  stream: "my-kinesis-stream-name"
  partitionKey: "container_id"
  appendNewline:
  dataKeys:
  roleArn:
  timeKey:
  timeKeyFormat:

# extraOutputs: |
#   [OUTPUT]
#     Name file
#     Format template
#     Template {time} used={Mem.used} free={Mem.free} total={Mem.total}

serviceAccount:
  create: true
  annotations: {}
  name:

resources:
  limits:
    memory: 500Mi
  requests:
    cpu: 500m
    memory: 500Mi

## Assign a PriorityClassName to pods if set
# priorityClassName: system-node-critical

updateStrategy:
  type: RollingUpdate

nodeSelector:
  kubernetes.io/os: linux

tolerations: []

affinity: {}

annotations: {}
# iam.amazonaws.com/role: arn:aws:iam::123456789012:role/role-for-fluent-bit

env: []

volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers

volumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true

